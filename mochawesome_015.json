{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-11-06T11:55:09.665Z",
    "end": "2024-11-06T11:56:24.735Z",
    "duration": 75070,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "e4afd29a-f4c5-46ec-8412-c940fe0d6d2c",
      "title": "",
      "fullFile": "cypress/e2e/Bussiness_owners/My-subscriptions/manage_branches/tests/Display_all_branches_list.cy.ts",
      "file": "cypress/e2e/Bussiness_owners/My-subscriptions/manage_branches/tests/Display_all_branches_list.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d79dab3d-ec04-4d48-aeef-902f29c2d7e0",
          "title": "Display All Branches",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1. Verift that all the table COLUMNS Headers ARE Successfully displayed",
              "fullTitle": "Display All Branches 1. Verift that all the table COLUMNS Headers ARE Successfully displayed",
              "timedOut": null,
              "duration": 34921,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.verifyCorrectColumnsHeaders(branches_managment__data_1.BranchesManagmentData.tableHeaders);",
              "err": {
                "message": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `p-button[icon=\"pi pi-pencil\"]`, but never found it.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Display All Branches`",
                "estack": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `p-button[icon=\"pi pi-pencil\"]`, but never found it.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Display All Branches`\n    at EditCompanyScreen.clickFirstCompanyToEdit (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/My-subscriptions/Manage_companies/pages/editCompanyScreenAct.ts:25:0)\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/My-subscriptions/manage_branches/tests/Display_all_branches_list.cy.ts:14:0)",
                "diff": null
              },
              "uuid": "7aa3f7e2-0c1f-402d-94f9-f5a1ce3b5fed",
              "parentUUID": "d79dab3d-ec04-4d48-aeef-902f29c2d7e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2. Verify That All Branches are Displayed Under Branches Tab.",
              "fullTitle": "Display All Branches 2. Verify That All Branches are Displayed Under Branches Tab.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"table\").then((table) => {\n    cy.wrap(table).find(\"th\").eq(0).contains(/code/i).should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(1)\n        .contains(/branch name/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(2)\n        .contains(/branch region/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(3)\n        .contains(/branch city/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(4)\n        .contains(/branch address/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(5)\n        .scrollIntoView()\n        .contains(/phone/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(6)\n        .scrollIntoView()\n        .contains(/branch email/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(7)\n        .scrollIntoView()\n        .contains(/status/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(8)\n        .scrollIntoView()\n        .contains(/actions/i)\n        .should(\"be.visible\");\n});",
              "err": {},
              "uuid": "f6a1d6cb-3d0c-4032-966f-81d987644c3d",
              "parentUUID": "d79dab3d-ec04-4d48-aeef-902f29c2d7e0",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "3. Checks if a row row has right data is inserted and the table  increases by one after submitting new data",
              "fullTitle": "Display All Branches 3. Checks if a row row has right data is inserted and the table  increases by one after submitting new data",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.logMsg(\"Before Submission\");\ncy.scrollToLastElement();\ncy.getInitItemsCountInListView();\ncy.get(\"table tbody tr\")\n    .last()\n    .find(\"td\")\n    .eq(1)\n    .invoke(\"text\")\n    .then((tName1) => {\n    cy.wrap(tName1.trim()).as(\"tName1\");\n});\ncy.get(\"table tbody tr\")\n    .last()\n    .find(\"td\")\n    .eq(2)\n    .invoke(\"text\")\n    .then((tRegion1) => {\n    cy.wrap(tRegion1.trim()).as(\"tRegion1\");\n});\ncy.get(\"table tbody tr\")\n    .last()\n    .find(\"td\")\n    .eq(3)\n    .invoke(\"text\")\n    .then((tCity1) => {\n    cy.wrap(tCity1.trim()).as(\"tCity1\");\n});\ncy.get(\"table tbody tr\")\n    .last()\n    .find(\"td\")\n    .eq(4)\n    .invoke(\"text\")\n    .then((tAddress1) => {\n    cy.wrap(tAddress1.trim()).as(\"tAddress1\");\n});\ncy.get(\"table tbody tr\")\n    .last()\n    .find(\"td\")\n    .eq(5)\n    .invoke(\"text\")\n    .then((tPhone1) => {\n    cy.wrap(tPhone1.trim()).as(\"tPhone1\");\n});\ncy.get(\"table tbody tr\")\n    .last()\n    .find(\"td\")\n    .eq(6)\n    .invoke(\"text\")\n    .then((tMail1) => {\n    cy.wrap(tMail1.trim()).as(\"tMail1\");\n});\n//  Submit A new Branch\nbranches_management_1.BranchesManagment.implementAddNewBranch();\nbranches_management_1.BranchesManagment.clickSaveButton();\n//  After Submission\ncy.wait(500);\ncy.reload();\ncy.wait(500);\ncy.scrollToLastElement();\ncy.get(\"@tName1\").then((tName1) => {\n    cy.get(\"table tbody tr\")\n        .last()\n        .find(\"td\")\n        .eq(1)\n        .scrollIntoView()\n        .invoke(\"text\")\n        .then((tName2) => {\n        expect((0, utils_1.trimText)(tName1.toString().trim())).not.to.equal((0, utils_1.trimText)(tName2));\n    });\n});\ncy.get(\"@tRegion1\").then((tRegion1) => {\n    cy.get(\"table tbody tr\")\n        .last()\n        .find(\"td\")\n        .eq(2)\n        .scrollIntoView()\n        .invoke(\"text\")\n        .then((tRegion2) => {\n        expect((0, utils_1.trimText)(tRegion1.toString().trim())).not.to.equal((0, utils_1.trimText)(tRegion2));\n    });\n});\ncy.get(\"@tCity1\").then((tCity1) => {\n    cy.get(\"table tbody tr\")\n        .last()\n        .find(\"td\")\n        .eq(3)\n        .scrollIntoView()\n        .invoke(\"text\")\n        .then((tCity2) => {\n        expect((0, utils_1.trimText)(tCity1.toString().trim())).not.to.equal((0, utils_1.trimText)(tCity2));\n    });\n});\ncy.get(\"@tAddress1\").then((tAddress1) => {\n    cy.get(\"table tbody tr\")\n        .last()\n        .find(\"td\")\n        .eq(1)\n        .scrollIntoView()\n        .invoke(\"text\")\n        .then((tAddress2) => {\n        expect((0, utils_1.trimText)(tAddress1.toString().trim())).not.to.equal((0, utils_1.trimText)(tAddress2));\n    });\n});\ncy.get(\"@tPhone1\").then((tPhone1) => {\n    cy.get(\"table tbody tr\")\n        .last()\n        .find(\"td\")\n        .eq(1)\n        .scrollIntoView()\n        .invoke(\"text\")\n        .then((tPhone2) => {\n        expect((0, utils_1.trimText)(tPhone1.toString().trim())).not.to.equal((0, utils_1.trimText)(tPhone2));\n    });\n});\ncy.get(\"@tMail1\").then((tMail1) => {\n    cy.get(\"table tbody tr\")\n        .last()\n        .find(\"td\")\n        .eq(1)\n        .scrollIntoView()\n        .invoke(\"text\")\n        .then((tMail2) => {\n        expect((0, utils_1.trimText)(tMail1.toString().trim())).not.to.equal((0, utils_1.trimText)(tMail2));\n    });\n});\ncy.assertnewItemAddedToListView();",
              "err": {},
              "uuid": "4f7a391b-3d25-43bf-b206-609f01bafafa",
              "parentUUID": "d79dab3d-ec04-4d48-aeef-902f29c2d7e0",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "4. Checks if the last row has the newly correct data values after submitting new data",
              "fullTitle": "Display All Branches 4. Checks if the last row has the newly correct data values after submitting new data",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.verifyFirstCellInTable(1, branches_managment__data_1.BranchesManagmentData.branchName);\ncy.verifyFirstCellInTable(2, branches_managment__data_1.BranchesManagmentData.branchRegion);\ncy.verifyFirstCellInTable(3, branches_managment__data_1.BranchesManagmentData.branchCity);\ncy.verifyFirstCellInTable(4, branches_managment__data_1.BranchesManagmentData.branchAddress);\ncy.verifyFirstCellInTable(5, branches_managment__data_1.BranchesManagmentData.mobileNumber);\ncy.verifyFirstCellInTable(6, branches_managment__data_1.BranchesManagmentData.branchMail);\nbranches_management_1.BranchesManagment.checkVisibilityOfEditIcon();\nbranches_management_1.BranchesManagment.checkVisibilityOfDeleteIcon();",
              "err": {},
              "uuid": "004451eb-73a2-4452-b2ee-34687821ab8f",
              "parentUUID": "d79dab3d-ec04-4d48-aeef-902f29c2d7e0",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "5. Verify That The User Can cancel Delete Branch From Cancel Button on Delete Branch Dialog.",
              "fullTitle": "Display All Branches 5. Verify That The User Can cancel Delete Branch From Cancel Button on Delete Branch Dialog.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "branches_management_1.BranchesManagment.clickDeleteTheLastItem();\nbranches_management_1.BranchesManagment.CancelDeleteBranchDialog();",
              "err": {},
              "uuid": "6a940764-77da-47f4-940e-d122d7b0f297",
              "parentUUID": "d79dab3d-ec04-4d48-aeef-902f29c2d7e0",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "6. Verify That The User Can Delete Branch From Delete Button on Each Branch Row.",
              "fullTitle": "Display All Branches 6. Verify That The User Can Delete Branch From Delete Button on Each Branch Row.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(1000);\ncy.getInitItemsCountInListView();\n//  Perform Delete Branch\nbranches_management_1.BranchesManagment.clickDeleteTheLastItem();\nbranches_management_1.BranchesManagment.ConfirmDeleteBranchDialog();\ncy.reload();\ncy.get(\"table tbody tr\").should(\"be.visible\");\ncy.assertItemDeletedFromListView();",
              "err": {},
              "uuid": "800c705c-7b9b-4d68-953c-4d2553b0393a",
              "parentUUID": "d79dab3d-ec04-4d48-aeef-902f29c2d7e0",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7aa3f7e2-0c1f-402d-94f9-f5a1ce3b5fed"
          ],
          "pending": [],
          "skipped": [
            "f6a1d6cb-3d0c-4032-966f-81d987644c3d",
            "4f7a391b-3d25-43bf-b206-609f01bafafa",
            "004451eb-73a2-4452-b2ee-34687821ab8f",
            "6a940764-77da-47f4-940e-d122d7b0f297",
            "800c705c-7b9b-4d68-953c-4d2553b0393a"
          ],
          "duration": 34921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}