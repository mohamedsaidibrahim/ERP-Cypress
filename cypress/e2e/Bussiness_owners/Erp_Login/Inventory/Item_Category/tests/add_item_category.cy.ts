import { InventoryData } from "../../data/inventory_data";
import { AddingCategoryScreen } from "../pages/adding_item_category_screen";
import { ItemCategory } from "../pages/item_category";

describe("Adding Item of Category", () => {
  beforeEach("Navigates to Item of Category", () => {
    cy.visit(InventoryData.ItemCategoryUrl);
  });
  it("1.Verify All Labels ", () => {
    ItemCategory.landing();
    cy.wait(1500);
    AddingCategoryScreen.clickAddNewButton();
    cy.wait(1000);
    cy.verifyLabelText("span", /main/i);
    cy.verifyLabelText("code", /code/i);
    cy.verifyLabelText("nameEn", /nameEn/i);
    cy.verifyLabelText("nameAr", /nameAr/i);
    cy.verifyLabelText("isDetailed", /is Detailed/i);
    cy.verifyLabelText("categoryType", /category Type/i);
    cy.verifyLabelText("span", /account/i);
    cy.verifyLabelText("glAccountId", /GL Account/i);
    cy.verifyLabelText("cashSalesAccountId", /Cash Sales Account/i);
    cy.verifyLabelText("creditSalesAccountId", /credit Sales Account/i);
    cy.verifyLabelText("salesReturnAccountId", /sales Return Account/i);
    cy.verifyLabelText("purchaseAccountId", /purchase Account/i);
    cy.verifyLabelText("salesCostAccountId", /sales Cost Account/i);
    cy.verifyLabelText("discountAccountId", /discount Account/i);
    cy.verifyLabelText("evaluationAccountId", /evaluation Account/i);
    cy.verifyLabelText("adjustmentAccountId", /adjustment Account/i);
    cy.verifyLabelText("goodsInTransitAccountId", /goods In Transit/i);
  });
  
  it("2.Verify Adding new Parent Item of Category WITHOUT PARENT", () => {
    ItemCategory.landing();
    cy.wait(1500);
    ItemCategory.switchingToListView();
    cy.wait(1000);
    cy.getInitItemsCountInListView();
    cy.wait(1000);
    ItemCategory.switchingToTreeView;
    cy.wait(1000);
    AddingCategoryScreen.clickAddNewButton();
    cy.wait(1000);
    AddingCategoryScreen.verifyCodeFieldISReadOnly();
    AddingCategoryScreen.selectCategoryType();
    AddingCategoryScreen.inputNameEn(InventoryData.itemCategoryNameEn);
    AddingCategoryScreen.selectGLAccountd();
    AddingCategoryScreen.inputNameAr(InventoryData.itemCategoryNameAr);
    AddingCategoryScreen.selectCashSalesAccountId();
    AddingCategoryScreen.selectCreditSalesAccountId();
    AddingCategoryScreen.selectSalesReturnAccountId();
    AddingCategoryScreen.dePurchaseAccountId();
    AddingCategoryScreen.selectSalesCostAccountId();
    AddingCategoryScreen.clickDiscountAccountId();
    AddingCategoryScreen.selectEvaluationAccountId();
    AddingCategoryScreen.selectAdjustmentAccountId();
    AddingCategoryScreen.selectGoodsInTransitAccountId();
    AddingCategoryScreen.verifyCancelButton();
    AddingCategoryScreen.clickSaveButton();
    cy.wait(1500);
    ItemCategory.SearchAnTreeAccount(InventoryData.itemCategoryNameEn);
    ItemCategory.switchingToListView();
    
    cy.assertnewItemAddedToListView();
  });

  it("3.Verify Adding new Parent Item of Category HAS PARENT", () => {
    ItemCategory.landing();
    cy.wait(1500);
    ItemCategory.switchingToListView();
    cy.wait(1000);
    cy.getInitItemsCountInListView();
    cy.wait(1000);
    ItemCategory.switchingToTreeView;
    cy.wait(1000);
    AddingCategoryScreen.clickAddNewButton();
    cy.wait(1000);
    AddingCategoryScreen.verifyCodeFieldISReadOnly();
    AddingCategoryScreen.selectCategoryType();
    cy.verifyLabelText("parentCategoryId", /parent Category/i);
    AddingCategoryScreen.selectParentCategoryId();
    AddingCategoryScreen.inputNameEn(InventoryData.itemCategoryNameEn);
    AddingCategoryScreen.selectGLAccountd();
    AddingCategoryScreen.inputNameAr(InventoryData.itemCategoryNameAr);
    AddingCategoryScreen.selectCashSalesAccountId();
    AddingCategoryScreen.selectCreditSalesAccountId();
    AddingCategoryScreen.selectSalesReturnAccountId();
    AddingCategoryScreen.dePurchaseAccountId();
    AddingCategoryScreen.selectSalesCostAccountId();
    AddingCategoryScreen.clickDiscountAccountId();
    AddingCategoryScreen.selectEvaluationAccountId();
    AddingCategoryScreen.selectAdjustmentAccountId();
    AddingCategoryScreen.selectGoodsInTransitAccountId();
    AddingCategoryScreen.verifyCancelButton();
    AddingCategoryScreen.clickSaveButton();
    cy.wait(1500);
    ItemCategory.SearchAnTreeAccount(InventoryData.itemCategoryNameEn);
    ItemCategory.switchingToListView();
    cy.assertnewItemAddedToListView();
  });

  it("4.Verify Adding new Detail Item of Category", () => {
    ItemCategory.landing();
    cy.wait(1500);
    ItemCategory.switchingToListView();
    cy.wait(1000);
    cy.getInitItemsCountInListView();
    cy.wait(1000);
    ItemCategory.switchingToTreeView;
    cy.wait(1000);
    AddingCategoryScreen.clickAddNewButton();
    cy.wait(1000);
    AddingCategoryScreen.verifyCodeFieldISReadOnly();
    AddingCategoryScreen.selectCategoryType();
    AddingCategoryScreen.clickInputSwitch();
    AddingCategoryScreen.selectParentCategoryId();
    AddingCategoryScreen.inputNameEn(InventoryData.itemCategoryNameEn);
    AddingCategoryScreen.selectGLAccountd();
    AddingCategoryScreen.inputNameAr(InventoryData.itemCategoryNameAr);
    AddingCategoryScreen.selectCashSalesAccountId();
    AddingCategoryScreen.selectCreditSalesAccountId();
    AddingCategoryScreen.selectSalesReturnAccountId();
    AddingCategoryScreen.dePurchaseAccountId();
    AddingCategoryScreen.selectSalesCostAccountId();
    AddingCategoryScreen.clickDiscountAccountId();
    AddingCategoryScreen.selectEvaluationAccountId();
    AddingCategoryScreen.selectAdjustmentAccountId();
    AddingCategoryScreen.selectGoodsInTransitAccountId();
    AddingCategoryScreen.verifyCancelButton();
    AddingCategoryScreen.clickSaveButton();
    cy.wait(1500);
    ItemCategory.SearchAnTreeAccount(InventoryData.itemCategoryNameEn);
    ItemCategory.switchingToListView();
    cy.wait(1000);
    cy.assertnewItemAddedToListView();
  });

  it("5. Verify Required Validation", () => {
    ItemCategory.landing();
    cy.wait(1500);
    AddingCategoryScreen.clickAddNewButton();
    cy.wait(1000);
    cy.verifyNotExistanceTheRequiredValidation();
    AddingCategoryScreen.clickSaveButton();
    cy.wait(1000);
    cy.increaseScreenItemsMaxCount(3);
    AddingCategoryScreen.inputNameEn(InventoryData.itemCategoryNameEn);
    cy.increaseScreenItemsMaxCount(2);
    AddingCategoryScreen.inputNameAr(InventoryData.itemCategoryNameAr);
    cy.increaseScreenItemsMaxCount(1);
    AddingCategoryScreen.selectCategoryType();
    cy.verifyNotExistanceTheRequiredValidation();
    AddingCategoryScreen.clickSaveButton();
    cy.wait(1500);
    ItemCategory.SearchAnTreeAccount(InventoryData.itemCategoryNameEn);
  });
});
