{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 1,
    "pending": 0,
    "failures": 3,
    "start": "2024-11-13T16:38:13.800Z",
    "end": "2024-11-13T16:51:56.713Z",
    "duration": 822913,
    "testsRegistered": 4,
    "passPercent": 25,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fa9c2503-567b-4f41-9318-413deadb0b8c",
      "title": "",
      "fullFile": "cypress/e2e/Bussiness_owners/Erp_Login/Accounting/charts_of_accounts/tests/add_chart_of_account.cy.ts",
      "file": "cypress/e2e/Bussiness_owners/Erp_Login/Accounting/charts_of_accounts/tests/add_chart_of_account.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2c04a0fb-3121-4e82-b2c7-150875533167",
          "title": "Adding Chart of Account",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1.Verify All Components are displaying in their correct states",
              "fullTitle": "Adding Chart of Account 1.Verify All Components are displaying in their correct states",
              "timedOut": null,
              "duration": 105472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(2000);\nadding_account_screen_1.AddingAccountScreen.clickAddNewButton();\ncy.wait(1500);\n// Verify Labels\ncy.contains('[data-pc-section=\"legendtitle\"]', \"Account\").should(\"be.visible\");\ncy.contains('label[for=\"name\"]', \"Name\").should(\"be.visible\");\ncy.contains('label[for=\"natureId\"]', \"Account Nature\").should(\"be.visible\");\ncy.contains('label[for=\"accountSectionId\"]', \"Account Section\").should(\"be.visible\");\ncy.contains('label[for=\"accountTypeId\"]', \"Account Type\").should(\"be.visible\");\ncy.contains('label[for=\"tags\"]', \"Tags\").should(\"be.visible\");\ncy.contains('label[for=\"hasNoChild\"]', \"Details\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.contains('[data-pc-section=\"legendtitle\"]', \"Cost Center Configuration\").should(\"not.exist\");\nadding_account_screen_1.AddingAccountScreen.clickIsDetail();\ncy.contains('[data-pc-section=\"legendtitle\"]', \"Cost Center Configuration\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.contains('label[for=\"1\"]', \"Mandatory\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.contains('label[for=\"2\"]', \"Optional\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.contains('label[for=\"3\"]', \"Not Allow\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.contains('[data-pc-section=\"legendtitle\"]', \"Account Activation\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.contains('label[for=\"Active\"]', \"Active\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.contains('label[for=\"Inactive\"]', \"Inactive\")\n    .scrollIntoView()\n    .should(\"be.visible\");\ncy.getByTestAttribute(\"save\")\n    .contains(/save/i)\n    .scrollIntoView()\n    .should(\"be.visible\");\n// Verift the name Text Field\ncy.get('input[class=\"p-inputtext p-component p-element ng-star-inserted\"]').should(\"have.length\", 1);\ncy.get('span[class=\"p-element p-dropdown-label p-inputtext p-dropdown-label-empty ng-star-inserted\"]')\n    .eq(1)\n    .click();\n// Verify The Visibility of One MultiSelect \"Tags\"\ncy.get('div[class=\"p-element p-multiselect-label-container\"]').should(\"have.length\", 1);\ncy.get(\".p-inputswitch-slider\").should(\"be.visible\");\ncy.get(\"#Active\").should(\"exist\");\ncy.get(\"#Inactive\").should(\"exist\");\ncy.get(\".p-radiobutton > .p-radiobutton-box\").should(\"have.length\", 6);\ncy.getByTestAttribute(\"save\")\n    .contains(/save/i)\n    .scrollIntoView()\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `input[class=\"p-inputtext p-component p-element ng-star-inserted\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `input[class=\"p-inputtext p-component p-element ng-star-inserted\"]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Accounting/charts_of_accounts/tests/add_chart_of_account.cy.ts:54:0)",
                "diff": null
              },
              "uuid": "33a49500-b1f3-42ef-8dd4-d2db9a9075d2",
              "parentUUID": "2c04a0fb-3121-4e82-b2c7-150875533167",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2.Verify Adding new Parent Chart of Account HAS PARENT",
              "fullTitle": "Adding Chart of Account 2.Verify Adding new Parent Chart of Account HAS PARENT",
              "timedOut": null,
              "duration": 95526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(2000);\nadding_account_screen_1.AddingAccountScreen.clickAddNewButton();\ncy.wait(1500);\ncy.getFirstItemInDropDownList(\"natureId\").then(($natureId) => {\n    cy.wrap($natureId)\n        .invoke(\"text\")\n        .then((natureTxt) => {\n        cy.log(\"natureTxt natureTxt natureTxt::: \" + natureTxt);\n        cy.wrap(natureTxt).as(\"natureTxt\");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.getLastItemInDropDownList(\"accountSectionId\").then(($accountSectionId) => {\n    cy.wrap($accountSectionId)\n        .invoke(\"text\")\n        .then((sectionTxt) => {\n        cy.log(\"sectionTxt::: \" + sectionTxt);\n        cy.wrap(sectionTxt).as(\"sectionTxt\");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.getLastItemInDropDownList(\"parentId\").then(($parentId) => {\n    cy.wrap($parentId)\n        .invoke(\"text\")\n        .then((parentTxt) => {\n        cy.log(\"parentTxt::: \" + parentTxt);\n        cy.wrap(parentTxt).as(\"parentTxt\");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.getFirstItemInDropDownList(\"accountTypeId\").then(($accountTypeId) => {\n    cy.wrap($accountTypeId)\n        .invoke(\"text\")\n        .then((typeTxt) => {\n        cy.log(\"typeTxt::: \" + typeTxt);\n        cy.wrap(typeTxt).as(\"typeTxt\");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.selectTags();\nadding_account_screen_1.AddingAccountScreen.checkActiveAccountActivation();\nadding_account_screen_1.AddingAccountScreen.clickSaveButton();\ncy.wait(2000);\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.get('div[class=\"description\"]').last().scrollIntoView().click({ force: true });\ncy.wait(1000);\ncy.verifyPlaceholderText(2, accounting_data_1.AccountingData.testParentAccountAddedd);\ncy.wait(1000);\ncy.get(\"@natureTxt\").then((natureTxt) => {\n    cy.verifyPlaceholderText(5, (0, utils_1.getWrappedString)(natureTxt));\n});\ncy.get(\"@sectionTxt\").then((sectionTxt) => {\n    cy.verifyPlaceholderText(6, (0, utils_1.getWrappedString)(sectionTxt));\n});\ncy.get(\"@parentTxt\").then((parentTxt) => {\n    cy.verifyPlaceholderText(3, (0, utils_1.getWrappedString)(parentTxt));\n});\ncy.get(\"@typeTxt\").then((typeTxt) => {\n    cy.verifyPlaceholderText(7, (0, utils_1.getWrappedString)(typeTxt));\n});",
              "err": {},
              "uuid": "567568bf-f345-44ef-9572-b8bfc5d49862",
              "parentUUID": "2c04a0fb-3121-4e82-b2c7-150875533167",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "3.Verify Adding new Parent Chart of Account WITHOUT PARENT",
              "fullTitle": "Adding Chart of Account 3.Verify Adding new Parent Chart of Account WITHOUT PARENT",
              "timedOut": null,
              "duration": 95599,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(2000);\nadding_account_screen_1.AddingAccountScreen.clickAddNewButton();\ncy.wait(1500);\ncy.getFirstItemInDropDownList(\"natureId\").then(($natureId) => {\n    cy.wrap($natureId)\n        .invoke(\"text\")\n        .then((natureTxt) => {\n        cy.log(\"natureTxt natureTxt natureTxt::: \" + natureTxt);\n        cy.wrap(natureTxt).as(\"natureTxt\");\n    });\n});\ncy.getLastItemInDropDownList(\"accountSectionId\").then(($accountSectionId) => {\n    cy.wrap($accountSectionId)\n        .invoke(\"text\")\n        .then((sectionTxt) => {\n        cy.log(\"sectionTxt::: \" + sectionTxt);\n        cy.wrap(sectionTxt).as(\"sectionTxt\");\n    });\n});\ncy.getLastItemInDropDownList(\"parentId\").then(($parentId) => {\n    cy.wrap($parentId)\n        .invoke(\"text\")\n        .then((parentTxt) => {\n        cy.log(\"parentTxt::: \" + parentTxt);\n        cy.wrap(parentTxt).as(\"parentTxt\");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.testParentAccountEditted);\ncy.getFirstItemInDropDownList(\"accountTypeId\").then(($accountTypeId) => {\n    cy.wrap($accountTypeId)\n        .invoke(\"text\")\n        .then((typeTxt) => {\n        cy.log(\"typeTxt::: \" + typeTxt);\n        cy.wrap(typeTxt).as(\"typeTxt\");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.selectTags();\nadding_account_screen_1.AddingAccountScreen.checkActiveAccountActivation();\nadding_account_screen_1.AddingAccountScreen.clickSaveButton();\ncy.wait(2000);\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.testParentAccountEditted);\ncy.get('div[class=\"description\"]').last().scrollIntoView().click({ force: true });\ncy.wait(1000);\ncy.verifyPlaceholderText(2, accounting_data_1.AccountingData.testParentAccountEditted);\ncy.get(\"@natureTxt\").then((natureTxt) => {\n    cy.verifyPlaceholderText(5, (0, utils_1.getWrappedString)(natureTxt));\n});\ncy.get(\"@sectionTxt\").then((sectionTxt) => {\n    cy.verifyPlaceholderText(6, (0, utils_1.getWrappedString)(sectionTxt));\n});\ncy.get(\"@parentTxt\").then((parentTxt) => {\n    cy.verifyPlaceholderText(3, (0, utils_1.getWrappedString)(parentTxt));\n});\ncy.get(\"@typeTxt\").then((typeTxt) => {\n    cy.verifyPlaceholderText(7, (0, utils_1.getWrappedString)(typeTxt));\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `div[class=\"description\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `div[class=\"description\"]`, but never found it.\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/e2e/Bussiness_owners/Erp_Login/Accounting/charts_of_accounts/tests/add_chart_of_account.cy.ts:174:0)",
                "diff": null
              },
              "uuid": "b2e1a751-e0cc-4515-8629-9258b1e29b0c",
              "parentUUID": "2c04a0fb-3121-4e82-b2c7-150875533167",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "4.Verify Adding new Detail Chart of Account",
              "fullTitle": "Adding Chart of Account 4.Verify Adding new Detail Chart of Account",
              "timedOut": null,
              "duration": 88951,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "charts_of_accounts_1.ChartOfAccounts.landing();\ncy.wait(2000);\nadding_account_screen_1.AddingAccountScreen.clickAddNewButton();\ncy.wait(1500);\ncy.getFirstItemInDropDownList(\"natureId\").then(($natureId) => {\n    cy.wrap($natureId)\n        .invoke(\"text\")\n        .then((natureTxt) => {\n        cy.log(\"natureTxt natureTxt natureTxt::: \" + natureTxt);\n        cy.wrap(natureTxt).as(\"natureTxt\");\n    });\n});\ncy.getLastItemInDropDownList(\"accountSectionId\").then(($accountSectionId) => {\n    cy.wrap($accountSectionId)\n        .invoke(\"text\")\n        .then((sectionTxt) => {\n        cy.log(\"sectionTxt::: \" + sectionTxt);\n        cy.wrap(sectionTxt).as(\"sectionTxt\");\n    });\n});\ncy.clickInputtedSearchDropDownList(\"parentId\", accounting_data_1.AccountingData.testParentAccountAddedSearch).then(($parentId) => {\n    cy.wrap($parentId)\n        .invoke(\"text\")\n        .then((parentTxt) => {\n        cy.log(\"parentTxt::: \" + parentTxt);\n        cy.wrap(parentTxt).as(\"parentTxt\");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.inputName(accounting_data_1.AccountingData.ChartOfAccountName);\ncy.getFirstItemInDropDownList(\"accountTypeId\").then(($accountTypeId) => {\n    cy.wrap($accountTypeId)\n        .invoke(\"text\")\n        .then((typeTxt) => {\n        cy.log(\"typeTxt::: \" + typeTxt);\n        cy.wrap(typeTxt).as(\"typeTxt\");\n    });\n});\nadding_account_screen_1.AddingAccountScreen.selectTags();\nadding_account_screen_1.AddingAccountScreen.checkActiveAccountActivation();\nadding_account_screen_1.AddingAccountScreen.clickIsDetail();\nadding_account_screen_1.AddingAccountScreen.checkOptionalCostCenterConfiguration();\ncy.clickInputtedSearchDropDownList(\"currencyId\", accounting_data_1.AccountingData.currencySrch);\nadding_account_screen_1.AddingAccountScreen.clickSaveButton();\ncy.wait(2000);\ncharts_of_accounts_1.ChartOfAccounts.SearchAnTreeAccount(accounting_data_1.AccountingData.ChartOfAccountName);\ncy.get(\"span#label_tree.ng-star-inserted\")\n    .last()\n    .scrollIntoView()\n    .click({ force: true });\ncy.wait(1000);\ncy.verifyPlaceholderText(2, accounting_data_1.AccountingData.ChartOfAccountName);\ncy.get(\"@natureTxt\").then((natureTxt) => {\n    cy.verifyPlaceholderText(5, (0, utils_1.getWrappedString)(natureTxt));\n});\ncy.get(\"@sectionTxt\").then((sectionTxt) => {\n    cy.verifyPlaceholderText(6, (0, utils_1.getWrappedString)(sectionTxt));\n});\ncy.get(\"@parentTxt\").then((parentTxt) => {\n    cy.verifyPlaceholderText(3, (0, utils_1.getWrappedString)(parentTxt));\n});\ncy.get(\"@typeTxt\").then((typeTxt) => {\n    cy.verifyPlaceholderText(7, (0, utils_1.getWrappedString)(typeTxt));\n});",
              "err": {
                "message": "CypressError: Timed out after waiting `60000ms` for your remote page to load.\n\nYour page did not fire its `load` event within `60000ms`.\n\nYou can try increasing the `pageLoadTimeout` value in `cypress.config.ts` to wait longer.\n\nBrowsers will not fire the `load` event until all stylesheets and scripts are done downloading.\n\nWhen this `load` event occurs, Cypress will continue running commands.",
                "estack": "CypressError: Timed out after waiting `60000ms` for your remote page to load.\n\nYour page did not fire its `load` event within `60000ms`.\n\nYou can try increasing the `pageLoadTimeout` value in `cypress.config.ts` to wait longer.\n\nBrowsers will not fire the `load` event until all stylesheets and scripts are done downloading.\n\nWhen this `load` event occurs, Cypress will continue running commands.\n    at timedOutWaitingForPageLoad (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:130482:64)\n    at <unknown> (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:130798:16)\n    at tryCatcher (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:1807:23)\n    at <unknown> (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:4186:41)\n    at tryCatcher (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://mohamed.microtecdev.com:2050/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:1215:0)",
                "diff": null
              },
              "uuid": "be1f1711-2942-4f3b-952b-904060acf72e",
              "parentUUID": "2c04a0fb-3121-4e82-b2c7-150875533167",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "567568bf-f345-44ef-9572-b8bfc5d49862"
          ],
          "failures": [
            "33a49500-b1f3-42ef-8dd4-d2db9a9075d2",
            "b2e1a751-e0cc-4515-8629-9258b1e29b0c",
            "be1f1711-2942-4f3b-952b-904060acf72e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 385548,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}