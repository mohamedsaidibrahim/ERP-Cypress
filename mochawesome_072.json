{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-12-03T08:19:30.831Z",
    "end": "2024-12-03T08:19:34.208Z",
    "duration": 3377,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "7dd294b3-6ac1-48d7-975a-fcdcdd8509b1",
      "title": "",
      "fullFile": "cypress/e2e/Bussiness_owners/Erp_Login/Inventory/Item_Category/tests/Displaying_main_screen.cy.ts",
      "file": "cypress/e2e/Bussiness_owners/Erp_Login/Inventory/Item_Category/tests/Displaying_main_screen.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3e80b72e-4a82-4516-8fdd-2b8d80f70e24",
          "title": "Displaying Item of Category",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1. Verify All Column headers are displayed in List view",
              "fullTitle": "Displaying Item of Category 1. Verify All Column headers are displayed in List view",
              "timedOut": null,
              "duration": 1612,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "item_category_1.ItemCategory.landing();\ncy.wait(1500);\nitem_category_1.ItemCategory.switchingToListView();\ncy.wait(1000);\ncy.get(\"table\").then((table) => {\n    cy.wrap(table).find(\"th\").eq(0).contains(/code/i).should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(1)\n        .contains(/name/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(2)\n        .contains(/parent category/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(3)\n        .contains(/detail/i)\n        .should(\"be.visible\");\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(4)\n        .scrollIntoView()\n        .should(\"include\", /status/i);\n    cy.wrap(table)\n        .find(\"th\")\n        .eq(5)\n        .scrollIntoView()\n        .should(\"include\", /actions/i);\n});",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://intmicrotec.neat-url.com:2006/bussiness-owners/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 77.31.144.166:2006\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.\n\nBecause this error occurred during a `before each` hook we are skipping all of the remaining tests.",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://intmicrotec.neat-url.com:2006/bussiness-owners/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 77.31.144.166:2006\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.\n\nBecause this error occurred during a `before each` hook we are skipping all of the remaining tests.\n    at <unknown> (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:131477:74)\n    at visitFailedByErr (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:130876:12)\n    at <unknown> (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:131476:11)\n    at tryCatcher (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromise0 (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:1644:10)\n    at Promise._settlePromises (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:1720:18)\n    at _drainQueueStep (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:2430:12)\n    at _drainQueue (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (https://intmicrotec.neat-url.com:2006/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://ERP_MicroTec_Cypress/./cypress/support/commands.ts:1239:0)\n\nFrom Node.js Internals:\n  Error: connect ECONNREFUSED 77.31.144.166:2006\n      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1495:16)",
                "diff": null
              },
              "uuid": "daed19e8-783a-4db9-b98f-1f6d13b8878a",
              "parentUUID": "3e80b72e-4a82-4516-8fdd-2b8d80f70e24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2. Verify Shiftting between Tree and List view",
              "fullTitle": "Displaying Item of Category 2. Verify Shiftting between Tree and List view",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "item_category_1.ItemCategory.landing();\ncy.wait(2000);\nitem_category_1.ItemCategory.switchingToListView();\nitem_category_1.ItemCategory.switchingToTreeView();",
              "err": {},
              "uuid": "5d34b76b-7309-44c1-a9c2-34cf2b68fa6d",
              "parentUUID": "3e80b72e-4a82-4516-8fdd-2b8d80f70e24",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "3. Verify Tree and List views have the same data (Parent Category)",
              "fullTitle": "Displaying Item of Category 3. Verify Tree and List views have the same data (Parent Category)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(2000);\nitem_category_1.ItemCategory.landing();\ncy.wait(2000);\nitem_category_1.ItemCategory.switchingToListView();\ncy.wait(1000);\nitem_category_1.ItemCategory.getFirstParentCategoryInTheListView();\ncy.get(\"@parentCategory\").then((parentCategory) => {\n    item_category_1.ItemCategory.SearchAListAccount((0, utils_1.getWrappedString)(parentCategory));\n});\ncy.getFirstCellInTableValue(0).then((codeT) => {\n    cy.wrap(codeT).as(\"codeT\");\n});\ncy.getFirstCellInTableValue(1).then((nameTextEn) => {\n    cy.wrap(nameTextEn).as(\"nameTextEn\");\n});\ncy.getFirstCellInTableValue(2).then((parentCategoryTxt) => {\n    cy.wrap(parentCategoryTxt).as(\"parentCategoryTxt\");\n});\ncy.getFirstCellInTableValue(5).then((categoryTypeTxt) => {\n    cy.wrap(categoryTypeTxt).as(\"categoryTypeTxt\");\n});\nitem_category_1.ItemCategory.switchingToTreeView();\ncy.wait(1000);\ncy.get(\"@parentCategory\").then((parentCategory) => {\n    item_category_1.ItemCategory.SearchAnTreeAccount((0, utils_1.getWrappedString)(parentCategory));\n});\ncy.wait(1000);\nitem_category_1.ItemCategory.displaytheLastCategoryViewMode();\ncy.wait(1000);\ncy.get(\"@codeT\").then((codeT) => {\n    cy.get('input[data-testid=\"input-text\"]').eq(0)\n        .scrollIntoView()\n        .should(\"exist\")\n        .invoke(\"attr\", \"placeholder\")\n        .then((placeholderText) => {\n        expect(placeholderText).to.exist; // // Check if the placeholder exists\n        expect(placeholderText).to.include((0, utils_1.getWrappedString)(codeT)); // // Wrap and return the placeholder text\n    });\n});\ncy.get(\"@nameTextEn\").then((nameTextEn) => {\n    cy.get('input[data-testid=\"input-text\"]').eq(1)\n        .scrollIntoView()\n        .should(\"exist\")\n        .invoke(\"attr\", \"placeholder\")\n        .then((placeholderText) => {\n        expect(placeholderText).to.exist; // // Check if the placeholder exists\n        expect(placeholderText).to.include((0, utils_1.getWrappedString)(nameTextEn)); // // Wrap and return the placeholder text\n    });\n});\ncy.get(\"@parentCategoryTxt\").then((parentCategoryTxt) => {\n    cy.get('input[data-testid=\"input-text\"]').eq(3)\n        .scrollIntoView()\n        .should(\"exist\")\n        .invoke(\"attr\", \"placeholder\")\n        .then((placeholderText) => {\n        expect(placeholderText).to.exist; // // Check if the placeholder exists\n        expect(placeholderText).to.include((0, utils_1.getWrappedString)(parentCategoryTxt)); // // Wrap and return the placeholder text\n    });\n});\ncy.get('input[data-testid=\"input-text\"]').should(\"have.length\", 4);",
              "err": {},
              "uuid": "b8612028-9d93-4cc6-9cfc-c66c982044b4",
              "parentUUID": "3e80b72e-4a82-4516-8fdd-2b8d80f70e24",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "4. Verify Tree and List views have the same data (Detailed Category)",
              "fullTitle": "Displaying Item of Category 4. Verify Tree and List views have the same data (Detailed Category)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(2000);\nitem_category_1.ItemCategory.landing();\ncy.wait(2000);\nitem_category_1.ItemCategory.switchingToListView();\ncy.wait(1000);\nitem_category_1.ItemCategory.getDetailedCategoryInTheListViewMissing();\ncy.get(\"@detailedCategory\").then((detailedCategory) => {\n    item_category_1.ItemCategory.SearchAListAccount((0, utils_1.getWrappedString)(detailedCategory));\n});\ncy.getFirstCellInTableValue(0).then((codeT) => {\n    cy.wrap(codeT).as(\"codeT\");\n});\ncy.getFirstCellInTableValue(1).then((nameTextEn) => {\n    cy.wrap(nameTextEn).as(\"nameTextEn\");\n});\ncy.getFirstCellInTableValue(2).then((parentCategoryTxt) => {\n    cy.wrap(parentCategoryTxt).as(\"parentCategoryTxt\");\n});\ncy.getFirstCellInTableValue(5).then((categoryTypeTxt) => {\n    cy.wrap(categoryTypeTxt).as(\"categoryTypeTxt\");\n});\nitem_category_1.ItemCategory.switchingToTreeView();\ncy.wait(1000);\ncy.get(\"@detailedCategory\").then((detailedCategory) => {\n    item_category_1.ItemCategory.SearchAnTreeAccount((0, utils_1.getWrappedString)(detailedCategory));\n});\ncy.wait(1000);\nitem_category_1.ItemCategory.displaytheLastCategoryViewMode();\ncy.wait(1000);\ncy.get(\"@codeT\").then((codeT) => {\n    cy.get('input[data-testid=\"input-text\"]').eq(0)\n        .scrollIntoView()\n        .should(\"exist\")\n        .invoke(\"attr\", \"placeholder\")\n        .then((placeholderText) => {\n        expect(placeholderText).to.exist; // Check if the placeholder exists\n        expect(placeholderText).to.include((0, utils_1.getWrappedString)(codeT)); // Wrap and return the placeholder text\n    });\n});\ncy.get(\"@nameTextEn\").then((nameTextEn) => {\n    cy.get('input[data-testid=\"input-text\"]').eq(1)\n        .scrollIntoView()\n        .should(\"exist\")\n        .invoke(\"attr\", \"placeholder\")\n        .then((placeholderText) => {\n        expect(placeholderText).to.exist; //// Check if the placeholder exists\n        expect(placeholderText).to.include((0, utils_1.getWrappedString)(nameTextEn)); // Wrap and return the placeholder text\n    });\n});\ncy.get(\"@parentCategoryTxt\").then((parentCategoryTxt) => {\n    cy.get('input[data-testid=\"input-text\"]').eq(3)\n        .scrollIntoView()\n        .should(\"exist\")\n        .invoke(\"attr\", \"placeholder\")\n        .then((placeholderText) => {\n        expect(placeholderText).to.exist; // Check if the placeholder exists\n        expect(placeholderText).to.include((0, utils_1.getWrappedString)(parentCategoryTxt)); // Wrap and return the placeholder text\n    });\n});\ncy.get(\"@categoryTypeTxt\").then((categoryTypeTxt) => {\n    cy.get('input[data-testid=\"input-text\"]').eq(4)\n        .scrollIntoView()\n        .should(\"exist\")\n        .invoke(\"attr\", \"placeholder\")\n        .then((placeholderText) => {\n        expect(placeholderText).to.exist; // Check if the placeholder exists\n        expect(placeholderText).to.include((0, utils_1.getWrappedString)(categoryTypeTxt)); // Wrap and return the placeholder text\n    });\n});\ncy.get('input[data-testid=\"input-text\"]').should(\"have.length\", 7);",
              "err": {},
              "uuid": "848827cf-76e6-4f7d-9879-b9337ce432cb",
              "parentUUID": "3e80b72e-4a82-4516-8fdd-2b8d80f70e24",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "daed19e8-783a-4db9-b98f-1f6d13b8878a"
          ],
          "pending": [],
          "skipped": [
            "5d34b76b-7309-44c1-a9c2-34cf2b68fa6d",
            "b8612028-9d93-4cc6-9cfc-c66c982044b4",
            "848827cf-76e6-4f7d-9879-b9337ce432cb"
          ],
          "duration": 1612,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}